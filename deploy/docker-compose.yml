services:
  postgres:
    container_name: ${POSTGRES_HOST}
    build:
      context: ../containers/docker
      dockerfile: postgres.Dockerfile
    image: l0-wb-techno-school-go-postgres:${POSTGRES_TAG:-17.6}
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
      - PGPORT=${POSTGRES_PORT}
      - POSTGRES_SSLMODE=${POSTGRES_SSLMODE}
      - POSTGRES_MIN_CONN=${POSTGRES_MIN_CONN}
      - POSTGRES_MAX_CONN=${POSTGRES_MAX_CONN}
    volumes:
      - ${POSTGRES_VOLUME:-postgres_data}:/var/lib/postgresql/data
    networks:
      - internal
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}", "-p", "${POSTGRES_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  zookeeper:
    build:
      context: ../containers/docker
      dockerfile: zookeeper.Dockerfile
    image: l0-wb-techno-school-go-zookeeper:${ZK_TAG:-7.4.1}
    container_name: ${ZK_HOST:-zookeeper}
    env_file:
      - ./.env
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}
    networks:
      - internal
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "bash", "-lc", "echo ruok | nc -w 3 127.0.0.1 2181 >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - ${ZK_DATA_VOLUME:-zookeeper_data}:/var/lib/zookeeper/data
      - ${ZK_LOG_VOLUME:-zookeeper_log}:/var/lib/zookeeper/log

  kafka:
    build:
      context: ../containers/docker
      dockerfile: kafka.Dockerfile
    image: l0-wb-techno-school-go-kafka:${KAFKA_TAG:-latest}
    container_name: kafka
    env_file:
      - ./.env
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_HEAP_OPTS: -Xms512M -Xmx1G
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    networks:
      - internal
    restart: unless-stopped
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "-lc", "/usr/bin/kafka-broker-api-versions --bootstrap-server 127.0.0.1:9092 >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 180s
    volumes:
      - ${KAFKA_LOG_VOLUME:-kafka_logs}:/var/lib/kafka/data

networks:
  internal:
    driver: bridge
    internal: true

volumes:
  postgres_data:
    driver: local
  zookeeper_data:
    driver: local
  zookeeper_log:
    driver: local
  kafka_logs:
    driver: local